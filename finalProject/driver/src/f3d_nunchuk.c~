/* f3d_nunchuk.c --- 
 * 
 * Filename: f3d_nunchuk.c
 * Description: 
 * Author: Bryce Himebaugh
 * Maintainer: 
 * Created: Thu Oct 31 09:40:37 2013
 * Last-Updated: 
 *           By: 
 *     Update #: 0
 * Keywords: 
 * Compatibility: 
 * 
 */

/* Commentary: 
 * 
 * 
 * 
 */

/* Change log:
 * 
 * 
 */

/* Copyright (c) 2004-2007 The Trustees of Indiana University and 
 * Indiana University Research and Technology Corporation.  
 * 
 * All rights reserved. 
 * 
 * Additional copyrights may follow 
 */

/* Code: */

#include <f3d_i2c.h>
#include <f3d_i2c2.h>
#include <f3d_nunchuk.h>
#include <stdio.h>

#define NUNCHUK_ADDRESS 0xA4

void f3d_nunchuk_init(void) {
  uint8_t realb = 0x00;
  uint8_t buf = 0x55;
  uint8_t buf2 = 0x00;
  uint8_t buf3 = 0x55;
  uint8_t buf4 = 0x00;

  // Use for factory Wii Nunchuk controllers
  // f3d_i2c1_write(NUNCHUK_ADDRESS,0x40,&realb);
  // Use for 3 party nunchuks like we have in the lab
  f3d_i2c1_write(NUNCHUK_ADDRESS,0xf0,&buf); 
  f3d_i2c1_write(NUNCHUK_ADDRESS,0xfb,&buf2);
  
  f3d_i2c2_write(NUNCHUK_ADDRESS,0xf0,&buf3);
  f3d_i2c2_write(NUNCHUK_ADDRESS,0xfb,&buf4);
}

void f3d_nunchuk_read(nunchuk_t *n) {
  uint8_t data1[6] = {0,0,0,0,0,0};
  uint8_t data2[6] = {0,0,0,0,0,0};
  int i;
  unsigned short tmp;
  
    f3d_i2c1_read_nunchuk(0xA5, data1, 6);
    n->jx = data1[0];
    n->jy = data1[1];
    
    tmp = data1[2];
    tmp = tmp << 2;
    n->ax = tmp | ((data1[5] & 0x0C) >> 2);
    
    tmp = data1[3];
    tmp = tmp << 2;
    n->ay = tmp | ((data1[5] & 0x30) >> 4);
    
    tmp = data1[4];
    tmp = tmp << 2;
    n->az = tmp | ((data1[5] & 0xC0) >> 6);
    
    switch (data1[5] & 0x03) {
    case 2:
      n->z = 1;
      n->c = 0;
      break;
    case 1:
      n->z = 0;
      n->c = 1;
      break;
    case 0:
      n->z = 1;
      n->c = 1;
      break;	
    case 3:	
      n->z = 0;	
      n->c = 0;	
      break;
    }
  }
void f3d_nunchuk_read2(nunchuk_t *n) {
    f3d_i2c2_read_nunchuk(0xA5, data2, 6);
    n->jx = data2[0];
    n->jy = data2[1];
    
    tmp = data2[2];
    tmp = tmp << 2;
    n->ax = tmp | ((data2[5] & 0x0C) >> 2);
    
    tmp = data2[3];
    tmp = tmp << 2;
    n->ay = tmp | ((data2[5] & 0x30) >> 4);
    
    tmp = data2[4];
    tmp = tmp << 2;
    n->az = tmp | ((data2[5] & 0xC0) >> 6);
    
    switch (data2[5] & 0x03) {
    case 2:
      n->z = 1;
      n->c = 0;
      break;
    case 1:
      n->z = 0;
      n->c = 1;
      break;
    case 0:
      n->z = 1;
      n->c = 1;
      break;	
    case 3:	
      n->z = 0;	
      n->c = 0;	
      break;	
    
  }
}
/* f3d_nunchuk.c ends here */
